Index: nfs-utils-2.3.2/utils/gssd/krb5_util.c
===================================================================
--- nfs-utils-2.3.2.orig/utils/gssd/krb5_util.c
+++ nfs-utils-2.3.2/utils/gssd/krb5_util.c
@@ -966,9 +966,37 @@ check_for_tgt(krb5_context context, krb5
 {
 	krb5_error_code ret;
 	krb5_creds creds;
-	krb5_cc_cursor cur;
 	int found = 0;
 
+#ifdef HAVE_HEIMDAL
+	krb5_creds pattern;
+	krb5_const_realm client_realm;
+
+	krb5_cc_clear_mcred(&pattern);
+
+	client_realm = krb5_principal_get_realm (context, principal);
+
+	ret = krb5_make_principal (context, &pattern.server,
+				   client_realm, KRB5_TGS_NAME, client_realm,
+				   NULL);
+	if (ret)
+	  krb5_err (context, 1, ret, "krb5_make_principal");
+	pattern.client = principal;
+
+	ret = krb5_cc_retrieve_cred (context, ccache, 0, &pattern, &creds);
+	krb5_free_principal (context, pattern.server);
+	if (ret) {
+	  if (ret == KRB5_CC_END)
+            return 1;
+	  krb5_err (context, 1, ret, "krb5_cc_retrieve_cred");
+	}
+
+	found = creds.times.endtime > time(NULL);
+
+	krb5_free_cred_contents (context, &creds);
+#else
+	krb5_cc_cursor cur;
+
 	ret = krb5_cc_start_seq_get(context, ccache, &cur);
 	if (ret) 
 		return 0;
@@ -988,6 +1016,7 @@ check_for_tgt(krb5_context context, krb5
 		krb5_free_cred_contents(context, &creds);
 	}
 	krb5_cc_end_seq_get(context, ccache, &cur);
+#endif
 
 	return found;
 }
Index: work/nfs-utils-2.3.2/utils/gssd/krb5_util.c
===================================================================
--- nfs-utils-2.3.2/utils/gssd/krb5_util.c.orig
+++ nfs-utils-2.3.2/utils/gssd/krb5_util.c
@@ -1130,7 +1130,7 @@ gssd_setup_krb5_user_gss_ccache(uid_t ui
 	maj_stat = gss_krb5_ccache_name(&min_stat, buf, NULL);
 	if (maj_stat != GSS_S_COMPLETE) {
 		printerr(0, "ERROR: unable to get user cred cache '%s' "
-			 "failed (%s)\n", buf, error_message(min_stat));
+			 "failed (%d)\n", buf, min_stat);
 		return maj_stat;
 	}
 	return 0;
@@ -1358,7 +1358,7 @@ gssd_k5_err_msg(krb5_context context, kr
 	if (context != NULL)
 		return strdup(krb5_get_err_text(context, code));
 	else
-		return strdup(error_message(code));
+		return strdup("gssd_k5_err_msg no context");
 #endif
 }
 
